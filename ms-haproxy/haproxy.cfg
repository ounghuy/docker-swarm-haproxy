# Setting `log` here with the address of 127.0.0.1 will have the effect
# of haproxy sending the udp log messages to its own rsyslog instance
# (which sits at `127.0.0.1`) at the `local0` facility including all
# logs that have a priority greater or equal than debug
global
                maxconn                   2046
                log /dev/log local2
                log 127.0.0.1:514  local2


# By default we want to use the same logging parameters as defined
# in the global section.
defaults
        log global
        mode http
        timeout connect 5000ms
        timeout client 50000ms
        timeout server 50000ms                


# Simple frontend that will take some HTTP requests from port :80
# and then always pick the `backend_default` default backend.
#
# Naturally, this configuration you'd replace by whatever makes more
# sense to your application.
frontend services
    bind *:80
    bind *:443
    option http-server-close
 
    acl url_go-msa path_beg /ms/a
    use_backend go-msa-be if url_go-msa

    acl url_go-msb path_beg /ms/b
    use_backend go-msb-be if url_go-msb

 
# A non-existent backend that would never return - again, this would
# be replaced by something that makes sense to your application, maybe
# something that gets generated whenever a new container goes up or
# it could be picked via DNS (as HAProxy now supports SRV records).
backend go-msa-be
    server demo_ms-node-a demo_ms-node-a:8080

backend go-msb-be
    server demo_ms-node-b demo_ms-node-b:8080
